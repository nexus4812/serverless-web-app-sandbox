service: serverless-web-app-sandbox
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
frameworkVersion: "3"

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-api-gateway-throttling
  - serverless-s3-sync

custom:
  apiGatewayThrottling:
    maxRequestsPerSecond: 10
    maxConcurrentRequests: 5
  bucketName: nexus4812-serverless-sandbox
  s3Sync:
    - bucketName: ${self:custom.bucketName}
      localDir: static

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-northeast-1

functions:
  webApi:
    handler: src/hello.handler
    events:
      - httpApi:
          method: get
          path: /hello
  taskPost:
    handler: src/taskHandler.post
    events:
      - httpApi:
          method: post
          path: /tasks
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: 'arn:aws:dynamodb:*:*:table/tasks'

  taskList:
    handler: src/taskHandler.list
    events:
      - httpApi:
          method: get
          path: /tasks
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: 'arn:aws:dynamodb:*:*:table/tasks'

resources:
  Resources:
    TasksDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: tasks
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    StaticSiteS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        WebsiteConfiguration:
          IndexDocument: index.html

    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSiteS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource: 'arn:aws:s3:::${self:custom.bucketName}/*'


